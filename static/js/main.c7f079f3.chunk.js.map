{"version":3,"sources":["logo.svg","components/common/ContextMain.js","components/common/constant.js","components/common/Drawer.js","components/Router/PrivateRoute/index.js","components/Login/Login.js","components/HomePage/HomePage.js","components/Router/index.js","App.js","reportWebVitals.js","index.js"],"names":["ContextMain","React","createContext","PAGE_TWO_ERROR_TEXT","drawerWidth","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","PrivateRoute","props","useState","userData","transData","useEffect","location","pathname","render","className","Provider","value","component","useStyles","maxWidth","marginTop","bullet","margin","transform","fontSize","pos","marginBottom","OutlinedCard","classes","Card","variant","CardContent","Typography","to","Button","color","CardActions","size","item","id","v4","taskName","accountName","dueDate","assignedTo","item2","item3","InitialList","openModal","setopenModal","text","setText","textError","setTextError","textErrorLabel","setTextErrorLabel","description","setDescription","descriptionError","setDescriptionError","descriptionErrorLabel","setDescriptionErrorLabel","account","setAccount","accountError","setAccountError","accountErrorLabel","setAccountErrorLabel","setAssignedTo","assignedToError","setAssignedToError","assignedToErrorLabel","setAssignedToErrorLabel","status","setStatus","statusError","setStatusError","statusErrorLabel","setStatusErrorLabel","priority","setPriority","priorityError","setPriorityError","priorityErrorLabel","setPriorityErrorLabel","Date","dueDateError","setDueDateError","dueDateErrorLabel","setDueDateErrorLabel","dueTime","dueTimeError","setDueTimeError","dueTimeErrorLabel","setDueTimeErrorLabel","weeks","setWeeks","saveDetailsEnable","setSaveDetailsEnable","items","state","setState","handleDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","handleDateChange","event","dt1","diff","getTime","Math","abs","round","handleCloseSub","handleInputChange","key","target","validationDynamic","todo","onClick","onDragEnd","_","map","data","length","provided","snapshot","ref","innerRef","droppableProps","el","draggableId","draggableProps","dragHandleProps","placeholder","Dialog","open","onClose","aria-labelledby","aria-describedby","noValidate","autoComplete","TextField","label","error","helperText","type","fullWidth","name","data-id","onChange","rows","cols","FormHelperText","FormControl","InputLabel","Select","labelId","MenuItem","disableClock","format","required","disableCalendar","DialogActions","CustomRoute","basename","path","HomePage","Login","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4PAAe,I,iECKFA,G,MAAcC,IAAMC,cAAc,KCLlCC,G,OACS,mB,+IC8BhBC,EAAc,IAEFC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,iBAG7CC,YAAa,CACTC,MAAM,eAAD,OAAiBd,EAAjB,OACLM,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQP,EAAMK,YAAYE,OAAOM,QACjCJ,SAAUT,EAAMK,YAAYI,SAASK,iBAEzCC,YAAajB,GAEjBkB,MAAO,CACHC,SAAU,GAEdC,KAAM,CACFhB,QAAS,QAEbiB,OAAQ,CACJP,MAAOd,EACPsB,WAAY,GAEhBC,YAAa,CACTT,MAAOd,GAEXwB,aAAa,yBACTpB,QAAS,OACTqB,WAAY,SACZC,QAASxB,EAAMyB,QAAQ,EAAG,IAEvBzB,EAAM0B,OAAOC,SALR,IAMRC,eAAgB,eAEpBC,QAAS,CACLZ,SAAU,EACVO,QAASxB,EAAMyB,QAAQ,GACvBrB,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC3CC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,gBAEzCK,aAAa,KAEjBe,aAAc,CACV1B,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC3CC,OAAQP,EAAMK,YAAYE,OAAOM,QACjCJ,SAAUT,EAAMK,YAAYI,SAASK,iBAEzCC,YAAa,OCvEN,SAASgB,EAAaC,GAAQ,IAAD,EACRrC,IAAMsC,SAAS,IADP,mBACjCC,EADiC,aAENvC,IAAMsC,SAAS,KAFT,mBAEjCE,EAFiC,UAUxC,OAJAC,qBAAU,cAEP,CAACJ,EAAMK,SAASC,WAGf,cAAC,IAAD,CAAOC,OAAQ,kBACX,qBAAKC,UAAU,oBAAf,SACI,cAAC9C,EAAY+C,SAAb,CAAsBC,MAAOR,EAA7B,SACI,qBAAKM,UAAU,4BAAf,SAII,qBAAKA,UAAU,mBAAf,SACI,cAACR,EAAMW,UAAP,CAAiBD,MAAOP,e,gDCtB9CS,EAAY7C,YAAW,CACzBE,KAAM,CACF4C,SAAU,IACVC,UAAW,IAEfC,OAAQ,CACJ7C,QAAS,eACT8C,OAAQ,QACRC,UAAW,cAEfjC,MAAO,CACHkC,SAAU,IAEdC,IAAK,CACDC,aAAc,MAIP,SAASC,IACpB,IAAMC,EAAUV,IACcU,EAAQP,OAEtC,OACI,eAACQ,EAAA,EAAD,CAAMf,UAAWc,EAAQrD,KAAMuD,QAAQ,WAAvC,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYF,QAAQ,KAAKb,UAAU,KAAKH,UAAU,kBAAlD,2CAKA,eAACkB,EAAA,EAAD,CAAYF,QAAQ,QAAQb,UAAU,IAAtC,gCAEN,0BAEM,eAAC,IAAD,CAAMgB,GAAE,QAAWnB,UAAU,eAA7B,eAA8C,cAACoB,EAAA,EAAD,CAAQJ,QAAQ,YAAYhB,UAAU,iBAAiBqB,MAAM,UAA7D,yBAElD,cAACC,EAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAQG,KAAK,QAAb,mC,oKC3BVC,EAAO,CACTC,GAAIC,cACJC,SAAU,kBACVC,YAAa,oBACbC,QAAS,IACTC,WAAY,MAGVC,EAAQ,CACVN,GAAIC,cACJC,SAAU,eACVC,YAAa,oBACbC,QAAS,IACTC,WAAY,MAGVE,EAAQ,CACVP,GAAIC,cACJC,SAAU,aACVC,YAAa,oBACbC,QAAS,IACTC,WAAY,MAoeDG,EAjeK,WAAO,IAAD,EAEYxC,oBAAS,GAFrB,mBAEfyC,EAFe,KAEJC,EAFI,OAGE1C,mBAAS,IAHX,mBAGf2C,EAHe,KAGTC,EAHS,OAIY5C,oBAAS,GAJrB,mBAIf6C,EAJe,KAIJC,EAJI,OAKsB9C,mBAAS,IAL/B,mBAKf+C,EALe,KAKCC,EALD,OAMgBhD,mBAAS,IANzB,mBAMfiD,EANe,KAMFC,EANE,OAO0BlD,oBAAS,GAPnC,mBAOfmD,EAPe,KAOGC,EAPH,OAQoCpD,mBAAS,IAR7C,mBAQfqD,EARe,KAQQC,EARR,OASQtD,mBAAS,IATjB,oBASfuD,GATe,MASNC,GATM,SAUkBxD,oBAAS,GAV3B,qBAUfyD,GAVe,MAUDC,GAVC,SAW4B1D,mBAAS,IAXrC,qBAWf2D,GAXe,MAWIC,GAXJ,SAYc5D,mBAAS,IAZvB,qBAYfqC,GAZe,MAYHwB,GAZG,SAawB7D,oBAAS,GAbjC,qBAaf8D,GAbe,MAaEC,GAbF,SAckC/D,mBAAS,IAd3C,qBAcfgE,GAde,MAcOC,GAdP,SAeMjE,mBAAS,IAff,qBAefkE,GAfe,MAePC,GAfO,SAgBgBnE,oBAAS,GAhBzB,qBAgBfoE,GAhBe,MAgBFC,GAhBE,SAiB0BrE,mBAAS,IAjBnC,qBAiBfsE,GAjBe,MAiBGC,GAjBH,SAkBUvE,mBAAS,IAlBnB,qBAkBfwE,GAlBe,MAkBLC,GAlBK,SAmBoBzE,oBAAS,GAnB7B,qBAmBf0E,GAnBe,MAmBAC,GAnBA,SAoB8B3E,mBAAS,IApBvC,qBAoBf4E,GApBe,MAoBKC,GApBL,SAqBQ7E,mBAAS,IAAI8E,MArBrB,qBAqBf1C,GArBe,gBAsBkBpC,oBAAS,IAtB3B,qBAsBf+E,GAtBe,MAsBDC,GAtBC,SAuB4BhF,mBAAS,IAvBrC,qBAuBfiF,GAvBe,MAuBIC,GAvBJ,SAwBQlF,mBAAS,IAAI8E,MAxBrB,qBAwBfK,GAxBe,gBAyBkBnF,oBAAS,IAzB3B,qBAyBfoF,GAzBe,MAyBDC,GAzBC,SA0B4BrF,mBAAS,IA1BrC,qBA0BfsF,GA1Be,MA0BIC,GA1BJ,SA2BIvF,mBAAS,IA3Bb,qBA2BfwF,GA3Be,MA2BRC,GA3BQ,SA4B4BzF,oBAAS,GA5BrC,qBA4Bf0F,GA5Be,MA4BIC,GA5BJ,SA6BI3F,mBAAS,CAC/B,KAAQ,CACJjB,MAAO,OACP6G,MAAO,CAAC7D,EAAMO,IAElB,cAAe,CACXvD,MAAO,cACP6G,MAAO,CAACrD,IAEZ,KAAQ,CACJxD,MAAO,YACP6G,MAAO,MAxCO,qBA6BfC,GA7Be,MA6BRC,GA7BQ,MA4ChBC,GAAgB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAClC,GAAKD,IAIDA,EAAYE,QAAUD,EAAOC,OAASF,EAAYG,cAAgBF,EAAOE,aAA7E,CAKA,IAAMC,EAAQ,eAAQP,GAAMI,EAAOE,aAAaP,MAAMK,EAAOC,QAE7DJ,IAAS,SAAAO,GASL,OARAA,EAAI,eAAQA,IAEPJ,EAAOE,aAAaP,MAAMU,OAAOL,EAAOC,MAAO,GAIpDG,EAAKL,EAAYG,aAAaP,MAAMU,OAAON,EAAYE,MAAO,EAAGE,GAE1DC,OA+BTE,GAAmB,SAACC,GACtBnB,IAAgB,GAChBE,GAAqB,IACrBP,IAAgB,GAChBA,GAAgB,IAChBW,IAAqB,GACrB,IAAIc,EAAM,IAAI3B,KAEV4B,GADMF,EACMG,UAAYF,EAAIE,WAAa,IAC7CD,GAAS,OACT,IAAIlB,EAAQoB,KAAKC,IAAID,KAAKE,MAAMJ,IAEhCjB,GAASD,IAGPuB,GAAiB,WACnBrE,GAAa,GACbI,GAAa,GACbE,EAAkB,IAClBI,GAAoB,GACpBE,EAAyB,IACzBI,IAAgB,GAChBE,GAAqB,IACrBG,IAAmB,GACnBE,GAAwB,IACxBI,IAAe,GACfE,GAAoB,IACpBI,IAAiB,GACjBE,GAAsB,IACtBQ,IAAgB,GAChBE,GAAqB,IACrBP,IAAgB,GAChBA,GAAgB,IAChBW,IAAqB,IAGnBqB,GAAoB,SAACR,EAAOS,GAC9B,IAAMxG,EAAQ+F,EAAMU,OAAOzG,MAE3B,OAAQwG,GACJ,IAAK,OAAQrE,EAAQnC,GACjB,MACJ,IAAK,cAAeyC,EAAezC,GAC/B,MACJ,IAAK,UAAW+C,GAAW/C,GACvB,MACJ,IAAK,aAAcoD,GAAcpD,GAC7B,MACJ,IAAK,SAAU0D,GAAU1D,GACrB,MACJ,IAAK,WAAYgE,GAAYhE,GAIjCqC,GAAa,GACbE,EAAkB,IAClBI,GAAoB,GACpBE,EAAyB,IACzBI,IAAgB,GAChBE,GAAqB,IACrBG,IAAmB,GACnBE,GAAwB,IACxBU,IAAiB,GACjBE,GAAsB,IACtBR,IAAe,GACfE,GAAoB,IACpBoB,IAAqB,IAGnBwB,GAAoB,WACtB,MAAa,KAATxE,GACAgD,IAAqB,GACrB7C,GAAa,QACbE,EAAkBpF,IAGG,KAAhBqF,GACL0C,IAAqB,GACrBvC,GAAoB,QACpBE,EAAyB1F,IAGR,KAAZ2F,IACLoC,IAAqB,GACrBjC,IAAgB,QAChBE,GAAqBhG,IAGD,KAAfyE,IACLsD,IAAqB,GACrB5B,IAAmB,QACnBE,GAAwBrG,IAGR,KAAXsG,IACLyB,IAAqB,GACrBtB,IAAe,QACfE,GAAoB3G,IAGF,KAAb4G,IACLmB,IAAqB,GACrBhB,IAAiB,QACjBE,GAAsBjH,IAGP,KAAV4H,IACLG,IAAqB,GACrBX,IAAgB,QAChBE,GAAqBtH,IAGJ,KAAZuH,IACLQ,IAAqB,GACrBN,IAAgB,QAChBE,GAAqB3H,KAGzB8E,GAAa,GAhJboD,IAAS,SAAAO,GACL,OAAO,2BACAA,GADP,IAEIe,KAAM,CACFrI,MAAO,OACP6G,MAAM,CACF,CACI5D,GAAIC,cACJC,SAAUS,EACVR,YAAaoB,GACbnB,QAASoD,GACTnD,WAAYA,KANf,mBAUEgE,EAAKe,KAAKxB,mBAK7BhD,EAAQ,MA2XZ,OACI,gCACI,8BACI,cAACjB,EAAA,EAAD,CAAQJ,QAAQ,YAAYK,MAAM,UAAUrB,UAAW,2BAA4B8G,QA5X1E,WACjB3E,GAAa,IA2XL,wBA3PJ,qBAAKnC,UAAU,MAAf,SACI,cAAC,IAAD,CAAiB+G,UAAWvB,GAA5B,SACKwB,IAAEC,IAAI3B,IAAO,SAAC4B,EAAMR,GAEjB,OACI,qBAAe1G,UAAW,GAA1B,SACI,sBAAKA,UAAU,WAAf,UACI,cAACe,EAAA,EAAD,CAAMf,UAAU,sCAAhB,SACI,cAACiB,EAAA,EAAD,UACI,qBAAIjB,UAAU,aAAd,cAA6BkH,EAAK1I,MAAlC,KAA2C0I,EAAK7B,MAAM8B,OAAtD,WAGR,cAAC,IAAD,CAAWvB,YAAac,EAAxB,SACK,SAACU,EAAUC,GAER,OACI,eAACtG,EAAA,EAAD,yBAAMf,UAAU,yCACZsH,IAAKF,EAASG,UACVH,EAASI,gBAFjB,cAIKN,EAAK7B,MAAM4B,KAAI,SAACQ,EAAI9B,GAEjB,OACI,cAAC,IAAD,CAAuBA,MAAOA,EAAO+B,YAAaD,EAAGhG,GAArD,SACK,SAAC2F,EAAUC,GAER,OACI,yDAAKrH,UAAU,uBACXsH,IAAKF,EAASG,UACVH,EAASO,gBACTP,EAASQ,iBAHjB,aAII,sBAAK5H,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,oBAAd,SAAmCyH,EAAG9F,aAE1C,qBAAK3B,UAAU,4BAAf,SACI,cAAC,IAAD,MAEJ,qBAAKA,UAAU,WAAf,SACI,qBAAIA,UAAU,4BAAd,UAA2CyH,EAAG7F,YAA9C,SAEJ,qBAAK5B,UAAU,WAAf,SACI,qBAAIA,UAAU,6BAAd,UAA4CyH,EAAG5F,QAA/C,gBAEJ,qBAAK7B,UAAU,WAAf,SACI,qBAAIA,UAAU,8BAAd,UAA6CyH,EAAG3F,WAAhD,iBAtBR2F,EAAGhG,OAgC1B2F,EAASS,uBAlDxBnB,UAmE1B,eAACoB,EAAA,EAAD,CACIC,KAAM7F,EACN8F,QAASxB,GACTyB,kBAAgB,qBAChBC,mBAAiB,2BAJrB,UAKI,oBAAIlI,UAAU,cAAd,uBACA,qBAAKA,UAAU,eAAf,SACI,sBAAMmI,YAAU,EAACC,aAAa,MAA9B,SACI,sBAAKpI,UAAU,WAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAACqI,EAAA,EAAD,CAAW5G,GAAG,iBAAiB6G,MAAM,YACjCpI,MAAOkC,EACPmG,MAAOjG,EACPkG,WAAYhG,EACZiG,KAAK,OACLjI,OAAO,SACPQ,QAAQ,WACRhB,UAAU,eACV0I,WAAS,EAETC,KAAK,OACLC,UAAQ,OACRC,SAAU,SAAC5C,GAAD,OACNQ,GAAkBR,EAAO,aAKrC,sBAAKjG,UAAU,iBAAf,UACI,0BAAU8I,KAAM,EAAGC,KAAM,GAAI/I,UAAU,wCACnCE,MAAOwC,EACPiG,KAAK,SACLC,UAAQ,SACRC,SAAU,SAAC5C,GAAD,OACNQ,GAAkBR,EAAO,gBAE7B4B,YAAY,gBAGfjF,EACI,cAACoG,EAAA,EAAD,UAAiBlG,IACd,MAGZ,qBAAK9C,UAAU,kBAAf,SACI,cAACqI,EAAA,EAAD,CAAW5G,GAAG,iBAAiB6G,MAAM,UACjCpI,MAAO8C,GACPuF,MAAOrF,GACPsF,WAAYpF,GACZqF,KAAK,OACLjI,OAAO,SACPQ,QAAQ,WACR0H,WAAS,EACT1I,UAAU,eAEV2I,KAAK,UACLC,UAAQ,UACRC,SAAU,SAAC5C,GAAD,OACNQ,GAAkBR,EAAO,gBAKrC,qBAAKjG,UAAU,4BAAf,SACI,eAACiJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYzH,GAAG,kCAAf,yBACA,eAAC0H,EAAA,EAAD,CACIC,QAAQ,kCACR3H,GAAG,4BACHvB,MAAO4B,GACP+G,SAAU,SAAC5C,GAAD,OACNQ,GAAkBR,EAAO,eAE7ByC,WAAS,EAPb,UAQI,cAACW,EAAA,EAAD,CAAUnJ,MAAM,KAAhB,0BACA,cAACmJ,EAAA,EAAD,CAAUnJ,MAAM,KAAhB,uBACA,cAACmJ,EAAA,EAAD,CAAUnJ,MAAM,MAAhB,2BAEHqD,GACI,cAACyF,EAAA,EAAD,UAAiBvF,KACd,QAIhB,qBAAKzD,UAAU,4BAAf,SACI,eAACiJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYzH,GAAG,kCAAf,oBACA,eAAC0H,EAAA,EAAD,CACIC,QAAQ,kCACR3H,GAAG,4BACHvB,MAAOyD,GACPkF,SAAU,SAAC5C,GAAD,OACNQ,GAAkBR,EAAO,WAE7ByC,WAAS,EAPb,UAQI,cAACW,EAAA,EAAD,CAAUnJ,MAAM,OAAhB,kBACA,cAACmJ,EAAA,EAAD,CAAUnJ,MAAM,aAAhB,yBACA,cAACmJ,EAAA,EAAD,CAAUnJ,MAAM,YAAhB,0BAEH2D,GACI,cAACmF,EAAA,EAAD,UAAiBjF,KACd,QAIhB,qBAAK/D,UAAU,4BAAf,SACI,eAACiJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYzH,GAAG,kCAAf,sBACA,eAAC0H,EAAA,EAAD,CACIC,QAAQ,kCACR3H,GAAG,4BACHvB,MAAO+D,GACP4E,SAAU,SAAC5C,GAAD,OACNQ,GAAkBR,EAAO,aAE7ByC,WAAS,EAPb,UAQI,cAACW,EAAA,EAAD,CAAUnJ,MAAM,OAAhB,iBACA,cAACmJ,EAAA,EAAD,CAAUnJ,MAAM,aAAhB,oBACA,cAACmJ,EAAA,EAAD,CAAUnJ,MAAM,YAAhB,qBAEHiE,GACI,cAAC6E,EAAA,EAAD,UAAiB3E,KACd,QAKhB,qBAAKrE,UAAU,4BAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,cAAC,IAAD,CACIsJ,cAAc,EACdT,SAAU7C,GACV9F,MAAO2B,GACP0H,OAAO,UACPC,UAAU,IAEbhF,GACI,cAACwE,EAAA,EAAD,CAAgBhJ,UAAU,OAA1B,SAAkC0E,KAC/B,QAIhB,qBAAK1E,UAAU,4BAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,cAAC,IAAD,CACIyJ,iBAAiB,EACjBZ,SAAU7C,GACV9F,MAAO0E,GACP2E,OAAO,YACPC,UAAU,IAEb3E,GACI,cAACmE,EAAA,EAAD,CAAgBhJ,UAAU,OAA1B,SAAkC+E,KAC/B,QAKhB,qBAAK/E,UAAU,gBAAf,SACI,cAACoB,EAAA,EAAD,CAAQJ,QAAQ,YAAYK,MAAM,UAAUrB,WAAkC,IAAtBmF,GAA+B,iBAAqB,yBAA2B2B,QAAS,kBAAMF,MAAtJ,6BAQhB,cAAC8C,EAAA,EAAD,UACI,cAACtI,EAAA,EAAD,CAAQ0F,QAASN,GAAgBnF,MAAM,UAAvC,4BCheLsI,E,4JAdX,WACI,OACI,8BACI,cAAC,IAAD,CAAQC,SAAS,gBAAjB,SACI,eAAC,IAAD,WACI,cAACrK,EAAD,CAAcsK,KAAK,QAAQ1J,UAAW2J,IACtC,cAAC,IAAD,CAAOD,KAAK,IAAI1J,UAAW4J,e,GAPzBC,aCDXC,MARf,WACE,OACE,qBAAKjK,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAAS5K,OACP,cAAC,IAAM6K,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c7f079f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\n\nimport React from 'react';\n\n\nexport const ContextMain = React.createContext({});\n","export const PAGE_TWO_ERROR_TEXT = {\n    'firstNameLabel': \"Invalid Detail.\",\n\n\n}\n\nexport const API = {\n    \"main_url\": \"http://localhost:5000/api/user/fullList\",\n    \"add_funds\": \"http://localhost:5000/api/user/addFunds\",\n    \"spend_funds\": \"http://localhost:5000/api/user/spendFunds\",\n    \"get_funds_id\": \"http://localhost:5000/api/user\",\n    \"add_user\": \"http://localhost:5000/api/user/add\",\n    \"trans_url\": \"https://my-json-server.typicode.com/hi-malay/trans/db\",\n}","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport \"./Drawer.css\"\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n    title: {\n        flexGrow: 1,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n}));\n\nexport default function PersistentDrawerRight() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const [select, setSelect] = React.useState(1);\n\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const changeDrawer = (key) => {\n        setMobileOpen(false)\n        switch (key) {\n            case `1`: setSelect(1)\n                break;\n            case `2`: setSelect(2)\n                break;\n            case `3`: setSelect(3)\n                break;\n            case `4`: setSelect(4)\n                break;\n            case `5`: setSelect(5)\n                break;\n            case `6`: setSelect(6)\n                break;\n            default: setSelect(1)\n                break;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n\n            <Toolbar>\n\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"end\"\n                    onClick={handleDrawerOpen}\n                    className={clsx(open && classes.hide)}\n                >\n                    <MenuIcon />\n                </IconButton>\n            </Toolbar>\n\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n\n            </main>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"right\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className='custom-list' >\n                    <Link to={`/all-wallet`} className=\"click-history\">\n                        <div onClick={() => changeDrawer(\"1\")}>\n                            <ListItem button className={(select === 1) ? \"active\" : ''}>\n                                <ListItemIcon> <ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary={\"All Wallets\"} />\n                            </ListItem>\n                        </div>\n\n                    </Link>\n                    <Link to={`/new-wallet`} className=\"click-history\">\n                        <div onClick={() => changeDrawer(\"2\")}>\n                            <ListItem button className={(select === 2) ? \"active\" : ''}>\n                                <ListItemIcon> <ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary={\"New Wallet\"} />\n                            </ListItem>\n                        </div>\n                    </Link>\n                    <Link to={`/check-balance`} className=\"click-history\">\n                        <div onClick={() => changeDrawer(\"3\")}>\n                            <ListItem button className={(select === 3) ? \"active\" : ''}>\n                                <ListItemIcon> <ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary={\"Check Balance\"} />\n                            </ListItem>\n                        </div>\n                    </Link>\n                    <Link to={`/add-funds`} className=\"click-history\">\n                        <div onClick={() => changeDrawer(\"4\")}>\n                            <ListItem button className={(select === 4) ? \"active\" : ''}>\n                                <ListItemIcon> <ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary={\"Add Funds\"} />\n                            </ListItem>\n                        </div>\n                    </Link>\n                    <Link to={`/spend-funds`} className=\"click-history\">\n                        <div onClick={() => changeDrawer(\"5\")}>\n                            <ListItem button className={(select === 5) ? \"active\" : ''}>\n                                <ListItemIcon> <ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary={\"Spend Funds\"} />\n                            </ListItem>\n                        </div>\n                    </Link>\n                    <Link to={`/all-trans`} className=\"click-history\">\n                        <div onClick={() => changeDrawer(\"6\")}>\n                            <ListItem button className={(select === 6) ? \"active\" : ''}>\n                                <ListItemIcon> <ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary={\"All Transactions\"} />\n                            </ListItem>\n                        </div>\n                    </Link>\n\n                </List>\n            </Drawer>\n        </div>\n    );\n}\n","import { Card, CardContent } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport \"../../style.css\"\nimport { ContextMain } from \"./../../common/ContextMain\"\nimport axios from \"axios\"\nimport { API } from '../../common/constant';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersistentDrawerRight from '../../common/Drawer';\n\nexport default function PrivateRoute(props) {\n    const [userData, setUserData] = React.useState({});\n    const [transData, setTransData] = React.useState({});\n    const mainApi = () => {\n    }\n\n    useEffect(() => {\n        mainApi()\n    }, [props.location.pathname])\n\n    return (\n        <Route render={() =>\n            <div className=\"bg-grey full-len \" >\n                <ContextMain.Provider value={userData}>\n                    <div className=\"max-width max-width-padd \">\n                        {/* <div className=\"col-md-4 mt-5\">\n                            <PersistentDrawerRight />\n                        </div> */}\n                        <div className=\" margin-top-head\">\n                            <props.component value={transData} />\n                        </div>\n                    </div>\n                </ContextMain.Provider>\n            </ div>} />\n    )\n\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 675,\n        marginTop: 30\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function OutlinedCard() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\" className=\"main-title mb-3\">\n                    CustomerSuccessBox Assignment\n        </Typography>\n\n\n                <Typography variant=\"body2\" component=\"p\">\n                    Click Here to Login\n          <br />\n                </Typography>\n                <Link to={`/home`} className=\"login-button\">  <Button variant=\"contained\" className=\"btn-class mt-4\" color=\"primary\" >Login</Button></Link>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">By: Malay Mishra</Button>\n            </CardActions>\n        </Card>\n    );\n}\n","\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport { v4 } from \"uuid\";\nimport { Button, Card, CardContent } from '@material-ui/core';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport \"./../style.css\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/constant';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport DateFnsUtils from '@date-io/date-fns';\nimport DateTimePicker from 'react-datetime-picker';\n\nconst item = {\n    id: v4(),\n    taskName: \"Clean the house\",\n    accountName: \"1569D Belly elish\",\n    dueDate: \"4\",\n    assignedTo: \"ST\"\n}\n\nconst item2 = {\n    id: v4(),\n    taskName: \"Wash the car\",\n    accountName: \"1569D Belly elish\",\n    dueDate: \"3\",\n    assignedTo: \"ST\"\n}\n\nconst item3 = {\n    id: v4(),\n    taskName: \"Do nothing\",\n    accountName: \"1569D Belly elish\",\n    dueDate: \"1\",\n    assignedTo: \"TT\"\n}\n\nconst InitialList = () => {\n\n    const [openModal, setopenModal] = useState(false)\n    const [text, setText] = useState(\"\")\n    const [textError, setTextError] = useState(false)\n    const [textErrorLabel, setTextErrorLabel] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [descriptionError, setDescriptionError] = useState(false)\n    const [descriptionErrorLabel, setDescriptionErrorLabel] = useState(\"\")\n    const [account, setAccount] = useState(\"\")\n    const [accountError, setAccountError] = useState(false)\n    const [accountErrorLabel, setAccountErrorLabel] = useState(\"\")\n    const [assignedTo, setAssignedTo] = useState(\"\")\n    const [assignedToError, setAssignedToError] = useState(false)\n    const [assignedToErrorLabel, setAssignedToErrorLabel] = useState(\"\")\n    const [status, setStatus] = useState(\"\")\n    const [statusError, setStatusError] = useState(false)\n    const [statusErrorLabel, setStatusErrorLabel] = useState(\"\")\n    const [priority, setPriority] = useState(\"\")\n    const [priorityError, setPriorityError] = useState(false)\n    const [priorityErrorLabel, setPriorityErrorLabel] = useState(\"\")\n    const [dueDate, setDueDate] = useState(new Date())\n    const [dueDateError, setDueDateError] = useState(true)\n    const [dueDateErrorLabel, setDueDateErrorLabel] = useState(\"\")\n    const [dueTime, setDueTime] = useState(new Date())\n    const [dueTimeError, setDueTimeError] = useState(true)\n    const [dueTimeErrorLabel, setDueTimeErrorLabel] = useState(\"\")\n    const [weeks, setWeeks] = useState(\"\")\n    const [saveDetailsEnable, setSaveDetailsEnable] = useState(true)\n    const [state, setState] = useState({\n        \"todo\": {\n            title: \"Todo\",\n            items: [item, item2]\n        },\n        \"in-progress\": {\n            title: \"In Progress\",\n            items: [item3]\n        },\n        \"done\": {\n            title: \"Completed\",\n            items: []\n        }\n    })\n\n    const handleDragEnd = ({ destination, source }) => {\n        if (!destination) {\n            return\n        }\n\n        if (destination.index === source.index && destination.droppableId === source.droppableId) {\n            return\n        }\n\n        // Creating a copy of item before removing it from state\n        const itemCopy = { ...state[source.droppableId].items[source.index] }\n\n        setState(prev => {\n            prev = { ...prev }\n            // Remove from previous items array\n            prev[source.droppableId].items.splice(source.index, 1)\n\n\n            // Adding to new items array location\n            prev[destination.droppableId].items.splice(destination.index, 0, itemCopy)\n\n            return prev\n        })\n    }\n\n    const addItem = () => {\n        setState(prev => {\n            return {\n                ...prev,\n                todo: {\n                    title: \"Todo\",\n                    items: [\n                        {\n                            id: v4(),\n                            taskName: text,\n                            accountName: account,\n                            dueDate: weeks,\n                            assignedTo: assignedTo\n\n\n                        },\n                        ...prev.todo.items\n                    ]\n                }\n            }\n        })\n        setText(\"\")\n    }\n    const handleAddSub = () => {\n        setopenModal(true)\n    };\n\n    const handleDateChange = (event) => {\n        setDueTimeError(false)\n        setDueTimeErrorLabel(\"\")\n        setDueDateError(false)\n        setDueDateError(\"\")\n        setSaveDetailsEnable(true)\n        let dt1 = new Date()\n        let dt2 = event\n        var diff = (dt2.getTime() - dt1.getTime()) / 1000;\n        diff /= (60 * 60 * 24 * 7);\n        let weeks = Math.abs(Math.round(diff));\n        // console.log(weeks)\n        setWeeks(weeks)\n    }\n\n    const handleCloseSub = () => {\n        setopenModal(false)\n        setTextError(false)\n        setTextErrorLabel(\"\")\n        setDescriptionError(false)\n        setDescriptionErrorLabel(\"\")\n        setAccountError(false)\n        setAccountErrorLabel(\"\")\n        setAssignedToError(false)\n        setAssignedToErrorLabel(\"\")\n        setStatusError(false)\n        setStatusErrorLabel(\"\")\n        setPriorityError(false)\n        setPriorityErrorLabel(\"\")\n        setDueTimeError(false)\n        setDueTimeErrorLabel(\"\")\n        setDueDateError(false)\n        setDueDateError(\"\")\n        setSaveDetailsEnable(true)\n    };\n\n    const handleInputChange = (event, key) => {\n        const value = event.target.value\n\n        switch (key) {\n            case 'text': setText(value)\n                break;\n            case 'description': setDescription(value)\n                break;\n            case 'account': setAccount(value)\n                break;\n            case 'assignedTo': setAssignedTo(value)\n                break;\n            case 'status': setStatus(value)\n                break;\n            case 'priority': setPriority(value)\n                break;\n        }\n\n        setTextError(false)\n        setTextErrorLabel(\"\")\n        setDescriptionError(false)\n        setDescriptionErrorLabel(\"\")\n        setAccountError(false)\n        setAccountErrorLabel(\"\")\n        setAssignedToError(false)\n        setAssignedToErrorLabel(\"\")\n        setPriorityError(false)\n        setPriorityErrorLabel(\"\")\n        setStatusError(false)\n        setStatusErrorLabel(\"\")\n        setSaveDetailsEnable(true)\n    }\n\n    const validationDynamic = () => {\n        if (text === \"\") {\n            setSaveDetailsEnable(false)\n            setTextError(true)\n            setTextErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return\n        }\n        else if (description === \"\") {\n            setSaveDetailsEnable(false)\n            setDescriptionError(true)\n            setDescriptionErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return;\n        }\n        else if (account === \"\") {\n            setSaveDetailsEnable(false)\n            setAccountError(true)\n            setAccountErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return;\n        }\n        else if (assignedTo === \"\") {\n            setSaveDetailsEnable(false)\n            setAssignedToError(true)\n            setAssignedToErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return;\n        }\n        else if (status === \"\") {\n            setSaveDetailsEnable(false)\n            setStatusError(true)\n            setStatusErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return;\n        }\n        else if (priority === \"\") {\n            setSaveDetailsEnable(false)\n            setPriorityError(true)\n            setPriorityErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return;\n        }\n        else if (weeks === \"\") {\n            setSaveDetailsEnable(false)\n            setDueDateError(true)\n            setDueDateErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return;\n        }\n        else if (dueTime === \"\") {\n            setSaveDetailsEnable(false)\n            setDueTimeError(true)\n            setDueTimeErrorLabel(PAGE_TWO_ERROR_TEXT.firstNameLabel)\n            return;\n        }\n        setopenModal(false)\n        addItem()\n    }\n\n    const draggableComponent = () => {\n\n        return (\n            <div className=\"row\">\n                <DragDropContext onDragEnd={handleDragEnd}>\n                    {_.map(state, (data, key) => {\n\n                        return (\n                            <div key={key} className={\"\"}>\n                                <div className=\"col-md-3\">\n                                    <Card className=\"custom-card card-dashboard top-head\">\n                                        <CardContent >\n                                            <h3 className=\"head-title\"> {data.title} ({data.items.length})</h3>\n                                        </CardContent>\n                                    </Card>\n                                    <Droppable droppableId={key}>\n                                        {(provided, snapshot) => {\n\n                                            return (\n                                                <Card className=\"custom-card card-dashboard more-height\"\n                                                    ref={provided.innerRef}\n                                                    {...provided.droppableProps}\n                                                >\n                                                    {data.items.map((el, index) => {\n                                                        // console.log(\"load2\", el)\n                                                        return (\n                                                            <Draggable key={el.id} index={index} draggableId={el.id}>\n                                                                {(provided, snapshot) => {\n                                                                    // console.log('loadSnap', snapshot)\n                                                                    return (\n                                                                        <div className=\"background-grey mt-4\"\n                                                                            ref={provided.innerRef}\n                                                                            {...provided.draggableProps}\n                                                                            {...provided.dragHandleProps}>\n                                                                            <div className=\"row\">\n                                                                                <div className=\"col-md-10\">\n                                                                                    <h3 className=\"intitle text-left\">{el.taskName}</h3>\n                                                                                </div>\n                                                                                <div className=\"col-md-2 emoji text-right\">\n                                                                                    <SentimentVeryDissatisfiedIcon />\n                                                                                </div>\n                                                                                <div className=\"col-md-8\">\n                                                                                    <h3 className=\"intitle-account text-left\">{el.accountName} </h3>\n                                                                                </div>\n                                                                                <div className=\"col-md-9\">\n                                                                                    <h3 className=\"intitle-due text-left mt-2\">{el.dueDate} week(s)</h3>\n                                                                                </div>\n                                                                                <div className=\"col-md-2\">\n                                                                                    <h3 className=\"intitle-due text-right mt-2\">{el.assignedTo} </h3>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    )\n                                                                }}\n                                                            </Draggable>\n                                                        )\n                                                    })}\n                                                    {provided.placeholder}\n                                                </Card>\n                                            )\n                                        }}\n                                    </Droppable>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </DragDropContext>\n            </div>\n        )\n    }\n\n\n    const drawerComponent = () => {\n        return (\n            <Dialog\n                open={openModal}\n                onClose={handleCloseSub}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <h3 className=\"modal-title\">Add Task </h3>\n                <div className=\"max-width-in\">\n                    <form noValidate autoComplete=\"off\">\n                        <div className=\"row mt-3\" >\n                            <div className=\"col-md-8 mt-3\">\n                                <TextField id=\"standard-basic\" label=\"Task Name\"\n                                    value={text}\n                                    error={textError}\n                                    helperText={textErrorLabel}\n                                    type=\"text\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    className=\"custom-input\"\n                                    fullWidth\n                                    //  disabled={isAccountDetailsDisabled}\n                                    name=\"text\"\n                                    data-id=\"text\"\n                                    onChange={(event) =>\n                                        handleInputChange(event, \"text\")\n                                    }\n\n                                />\n                            </div>\n                            <div className=\"col-md-12 mt-3\">\n                                <textarea rows={4} cols={48} className=\"lead-textarea custom-input full-width\"\n                                    value={description}\n                                    name=\"remark\"\n                                    data-id=\"remark\"\n                                    onChange={(event) =>\n                                        handleInputChange(event, \"description\")\n                                    }\n                                    placeholder=\"Description\"\n                                >\n                                </textarea>\n                                {descriptionError ?\n                                    (<FormHelperText>{descriptionErrorLabel}</FormHelperText>\n                                    ) : \"\"\n                                }\n                            </div>\n                            <div className=\" col-md-8 mt-3 \">\n                                <TextField id=\"standard-basic\" label=\"Account\"\n                                    value={account}\n                                    error={accountError}\n                                    helperText={accountErrorLabel}\n                                    type=\"text\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    className=\"custom-input\"\n                                    // disabled={isAccountDetailsDisabled}\n                                    name=\"account\"\n                                    data-id=\"account\"\n                                    onChange={(event) =>\n                                        handleInputChange(event, \"account\")\n                                    }\n                                />\n                            </div>\n\n                            <div className=\"col-md-8 mt-3 form-select\">\n                                <FormControl >\n                                    <InputLabel id=\"demo-simple-select-helper-label\">Assigned To</InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-helper-label\"\n                                        id=\"demo-simple-select-helper\"\n                                        value={assignedTo}\n                                        onChange={(event) =>\n                                            handleInputChange(event, \"assignedTo\")\n                                        }\n                                        fullWidth>\n                                        <MenuItem value=\"ST\">Support Team</MenuItem>\n                                        <MenuItem value=\"TT\">Tech Team</MenuItem>\n                                        <MenuItem value=\"SlT\">Sales Team</MenuItem>\n                                    </Select>\n                                    {assignedToError ?\n                                        (<FormHelperText>{assignedToErrorLabel}</FormHelperText>\n                                        ) : \"\"\n                                    }\n                                </FormControl>\n                            </div>\n                            <div className=\"col-md-8 mt-3 form-select\">\n                                <FormControl >\n                                    <InputLabel id=\"demo-simple-select-helper-label\">Status</InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-helper-label\"\n                                        id=\"demo-simple-select-helper\"\n                                        value={status}\n                                        onChange={(event) =>\n                                            handleInputChange(event, \"status\")\n                                        }\n                                        fullWidth>\n                                        <MenuItem value=\"todo\">ToDo</MenuItem>\n                                        <MenuItem value=\"inProgress\">In Progress</MenuItem>\n                                        <MenuItem value=\"completed\">Completed</MenuItem>\n                                    </Select>\n                                    {statusError ?\n                                        (<FormHelperText>{statusErrorLabel}</FormHelperText>\n                                        ) : \"\"\n                                    }\n                                </FormControl>\n                            </div>\n                            <div className=\"col-md-8 mt-3 form-select\">\n                                <FormControl >\n                                    <InputLabel id=\"demo-simple-select-helper-label\">Priority</InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-helper-label\"\n                                        id=\"demo-simple-select-helper\"\n                                        value={priority}\n                                        onChange={(event) =>\n                                            handleInputChange(event, \"priority\")\n                                        }\n                                        fullWidth>\n                                        <MenuItem value=\"todo\">Low</MenuItem>\n                                        <MenuItem value=\"inProgress\">Medium</MenuItem>\n                                        <MenuItem value=\"completed\">High</MenuItem>\n                                    </Select>\n                                    {priorityError ?\n                                        (<FormHelperText>{priorityErrorLabel}</FormHelperText>\n                                        ) : \"\"\n                                    }\n                                </FormControl>\n                            </div>\n\n                            <div className=\"col-md-6 mt-3 form-select\">\n                                <div className=\"date-styling mt-4\">\n                                    <DateTimePicker\n                                        disableClock={true}\n                                        onChange={handleDateChange}\n                                        value={dueDate}\n                                        format=\"y-MM-dd\"\n                                        required={true}\n                                    />\n                                    {dueDateError ?\n                                        (<FormHelperText className=\"mt-2\">{dueDateErrorLabel}</FormHelperText>\n                                        ) : \"\"\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"col-md-6 mt-3 form-select\">\n                                <div className=\"date-styling mt-4\">\n                                    <DateTimePicker\n                                        disableCalendar={true}\n                                        onChange={handleDateChange}\n                                        value={dueTime}\n                                        format=\"h:mm:ss a\"\n                                        required={true}\n                                    />\n                                    {dueTimeError ?\n                                        (<FormHelperText className=\"mt-2\">{dueTimeErrorLabel}</FormHelperText>\n                                        ) : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-6 mt-3\">\n                                <Button variant=\"contained\" color=\"primary\" className={(saveDetailsEnable === true) ? (\"btn-class mt-4\") : (\"btn-class-default mt-4\")} onClick={() => validationDynamic()}>Submit</Button>\n                            </div>\n\n                        </div>\n\n                    </form>\n                </div>\n\n                <DialogActions>\n                    <Button onClick={handleCloseSub} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n\n    return (\n        <div>\n            <div>\n                <Button variant=\"contained\" color=\"primary\" className={\"btn-class menu-icon mt-4\"} onClick={handleAddSub}>Add task</Button>\n            </div>\n\n            {draggableComponent()}\n            {drawerComponent()}\n        </div>\n    );\n};\n\nexport default InitialList;","import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\nimport PrivateRoute from './PrivateRoute';\nimport Login from \"../Login/Login\";\nimport HomePage from \"../HomePage/HomePage\"\n\nclass CustomRoute extends Component {\n    render() {\n        return (\n            <div>\n                <Router basename=\"/customertodo\">\n                    <Switch>\n                        <PrivateRoute path=\"/home\" component={HomePage} />\n                        <Route path=\"/\" component={Login} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default CustomRoute;\n\n","import logo from './logo.svg';\nimport './App.css';\nimport CustomRouter from \"./components/Router/index\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustomRouter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}